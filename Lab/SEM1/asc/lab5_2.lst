     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13 00000000 6162636465                  a db 'abcde'    ;sir de caractere    
    14                                  
    15                                  ; our code starts here
    16                                  segment code use32 class=code
    17                                      start:
    18 00000000 B905000000                      mov ecx, 5
    19 00000005 BB00000000                      mov ebx, 0  ;index
    20                                          
    21                                          repeta:
    22 0000000A 8A83[00000000]                      mov al, [a + ebx]
    23 00000010 2C20                                sub al, 'a' - 'A'   ;transform in litera mare
    24 00000012 8883[00000000]                      mov [a + ebx], al
    25 00000018 43                                  inc ebx
    26                                              
    27 00000019 E2EF                                loop repeta
    28                                      
    29                                          ; exit(0)
    30 0000001B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    31 0000001D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
